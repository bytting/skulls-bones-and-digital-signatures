<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAACAUUAAQBOAAMFQQAABFwAAQZVAAIAawAFAmQAAQBzAAYCbgAAAHcAAANuAAEFZwAEAHcACgdeAAAF
        cAADAIAACgdnAAIOUwAFC2EAAg5cAAAEhAALD1wAAQd8AAsJcgAJB3sABAp0AAEPZQAHDWwACg9lAAsV
        WgAKCocABQ2AAAMLiAANDX8ACBB4AAkJkQABEXkABA2KAAwOigAIEYMABQ+LAAIThQAVEoIABxGMABAT
        gwAPEo0ABxh/ABoeZgAMF4YADxl/ABEWkAAVG4AAIyVbAA8biwALGpIAExmTABgZkgAWHIwAIyN0ABoh
        iAAYII8AKSpoACEdlwAVI4gAFh+XACQjiAAdIJkAKSl9ABwllAAkK34AKSOaACImlQApKZgALDJ6ACcn
        ogAyN28AKS2UAC03dwAyMI4AKC6eAC4ykAAxMqMAMTefADA5mgA3OJ4AM0CGADc8mwAzOa8APzyvAENH
        oABHRqYAQkuuAENNqABFV6QATFO2AE9XqwBUWKgATFe0AFlYtQBVWrcAWGG1AGJisABbZKwAWWeoAGJh
        wABkaroAbGy7AGJxsgBrcrAAcm/EAGZyxABzerkAe33IAIKEwAB2hcQAgZDFAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAdHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0
        dHR0dHR0dHR0dHR0dHR0dHR0dHQ0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHQdHiUnH010dHQ9
        CA8eIB4fIS90dHR0dHR0dHR0dHR0SyEoKCgoHh8fJx4lJSsrKCglJ3R0dHR0dHR0dHR0dHQUKygoKCgm
        OEQ8LSsoKCgoKCgodHR0dHR0dHR0dHR0SSArKzJacW88FBRSc2pVMCgoKCh0dHR0dHR0dHR0EB8nJStM
        bRZmBggLCw4FZhZrPCgoJXR0dHR0dHR0GiclJSglQllMDg4KCgoKCgoKCAthKygmGHR0dHR0dBwoKCso
        KEw/Yw4OCgoKCgoKCgoFDgtbLSgrHhV0dHR0OjwoKCg1LFMHCgoKCgoKCgoKCgoKBRlRLSgoJSd0dHR0
        RzArKE8ZDAoKCgoKCgoKCgoKCgoKKiI5KCgoJnR0dHQ7QCsoJxgOCgoKCgoKCgoKCgoKCgoFGUQoKCgm
        dHR0dHQmKDAZBwUKCgoKCgoKCgoKCgoKCgoJHigoLS50dHR0dCAoKwUODgoKCgoKCgoKCgoKCgoKChYi
        KCgtHnR0dHR0HigoDA4ICgoKCgoKCgoKCgoKCgoKDhcoLU90dHR0dHQgKCgZDggKCgoKCgoKCgoKCgoK
        CgoOFygrHnR0dHR0OiUoJwMOCAoKCgoKCgoKCgoKCgoKCg8kKChOdHR0dHQZKCgoHAcHCgoKCgoKCgoK
        CgoKCgUOHiQoKUV0dHR0dBgoKCUfCAsKCgoKCgoKCgoKCgoKBRYRJSglInR0dHR0ISUoKCAEBwUKCgoK
        CgoKCgoKCgoFCBclKCgndHR0dHRDNygoJR4BDgoKCgoKCgoKCgoKDgwbJSYoKyh0dHR0dHRYQisoJR4N
        Bg4KCgoKCgoKCg4HGh4oKCgrNnR0dHR0dHQtcFQwIyYXAgsKDg4KBQ4MABglJSYnPmlBdHR0dHR0dHR0
        SGVKKCgYEgAGCAgGARMhKCs4VGxudHR0dHR0dHR0dHR0dDFjMisgIB8iIh8eKCNCckZVdHR0dHR0dHR0
        dHR0dHR0dHRoMigoKysrKCgyXDN0dHR0dHR0dHR0dHR0dHR0dHR0dHRdPCUoKCgrRGJndHR0dHR0dHR0
        dHR0dHR0dHR0dHR0dEleNisoJTdmdHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHRkX1ZgV3R0dHR0dHR0
        dHR0dHR0dHR0dHR0dHR0dHR0dHR0UHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0
        dHR0dHR0dHR0dP///////////9////8DgD/+AAA//gAAP/wAAD/wAAA/wAAAH4AAAAeAAAADwAAAA8AA
        AAPgAAAD4AAAA+AAAAfgAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfgAAAH8AAAB/wAAB//AAB//8AD///g
        B///4B////g////+////////
</value>
  </data>
</root>